query GET_USER($id: ID!) {
  user(id: $id) {
    id
    firtName
  }
}

query GET_USERS {
  users {
    id
    indexRef
    firtName
    lastName
    createdAt
    updatedAt
  }
}

query GET_PHONE($id: ID!) {
  phone(id: $id) {
    id
    indexRef
    userId
    title
    value
    createdAt
    updatedAt
  }
}

query GET_PHONES {
  phones {
    id
    indexRef
    userId
    title
    value
    createdAt
    updatedAt
  }
}

# Aliases in queries

## Not using
## Not repeat property
query GET_USER($id: ID!, $id2: ID!) {
  user(id: $id) {
    id
    firtName
  }
  user(id: $id2) {
    id
    firtName
  }
}

## Correct use
query GET_USER($id: ID!, $id2: ID!) {
  user(id: $id) {
    id
    firtName
  }
  aliasesUser: user(id: $id2) {
    id
    firtName
    aliasesId: id
    aliasesName: firtName
  }
}

# Query fragments

fragment user on User {
  id
  indexRef
  firtName
  lastName
  createdAt
  updatedAt
}

query GET_USER($id: ID!) {
  user(id: $id) {
    ...user
  }
}

# Filters

query ExampleQuery {
  users(input: { _sort: "desc", _start: 0, _limit: 1, _order: "indexRef" }) {
    firtName
    indexRef
  }
}

# Filters with default values
query ContactTypes(
  $sort: String = "title"
  $order: String = "asc"
  $start: Int = 0
  $limit: Int = 10
) {
  contactTypes(
    input: { _sort: $sort, _order: $order, _start: $start, _limit: $limit }
  ) {
    indexRef
    title
  }
}

  # values params
  {
    "limit": 1
  }

# Queries for union type

query User {
  user(id: "102") {
    __typename

    ... on User {
      id
      firtName
    }

    ... on UserNotFoundError {
      statusCode
      message
    }
  }
}

# result ok
{
  "data": {
    "user": {
      "__typename": "User",
      "id": "102",
      "firtName": "Jo√£o"
    }
  }
}

# result error
{
  "data": {
    "user": {
      "__typename": "UserNotFoundError",
      "statusCode": 404,
      "message": "User not found!"
    }
  }
}
